#!/bin/sh

#
# ginit - initialize a git repository for my needs
# requires: gum, basename

if [ ! -d .git ]; then
    gum log --structured --level fatal "not a git repository"
    exit
fi

repo_name="$(basename `git rev-parse --show-toplevel`)"
remote_count="$(git remote | wc -l)"

remove_remotes() {
    for remote in $(git remote)
    do
        gum log --structured --level info "removing remote" remote ${remote} repo ${repo_name}
        git remote remove ${remote}
    done
}

add_remotes() {
    gum log --structured --level info "adding remote" remote "gitea" repo ${repo_name}
    git remote add gitea "ssh://gitea@git.yrwq.xyz:2200/yrwq/${repo_name}.git"

    gum log --structured --level info "adding remote" remote "soft" repo ${repo_name}
    git remote add soft "git@yrwq.xyz:${repo_name}.git"

    gum log --structured --level info "adding remote" remote "github" repo ${repo_name}
    git remote add github "git@github.com:yrwq/${repo_name}.git"
}

case ${remote_count} in
    0)
        gum log --structured --level debug  "no remotes found" repo ${repo_name}
        add_remotes
    ;;
    *)
        remove_remotes
        add_remotes
    ;;
esac

